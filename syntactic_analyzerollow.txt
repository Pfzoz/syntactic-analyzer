Follow(<START>) = {Terminal($)}
Follow(<DECLARATION>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(comma), Terminal(reserved_type_number)}
Follow(<SENTENCE>) = {Terminal(final_block), Terminal($)}
Follow(<EXPRESSION>) = {Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(end_of_line), Terminal(initial_parenthesis), Terminal(reserved_func_read), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(comma), Terminal(number), Terminal(id), Terminal(reserved_func_input)}
Follow(<BLOCK>) = {Terminal(reserved_directive_else), Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(comma), Terminal(reserved_type_number)}
Follow(<TYPE>) = {Terminal(id)}
Follow(<PARAMETERS>) = {Terminal(final_parenthesis)}
Follow(<PARAMETER>) = {Terminal(comma), Terminal(final_parenthesis)}
Follow(<FUNCTION_CALL>) = {Terminal(op_logic_greater), Terminal(end_of_line), Terminal(op_logic_smaller), Terminal(initial_parenthesis), Terminal(op_logic_greater_equal), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(op_arit_sum), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(op_logic_equal), Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(op_arit_sub), Terminal(op_logic_smaller_equal), Terminal(reserved_func_read), Terminal(comma)}
Follow(<ADDITIONAL_PARAMETERS>) = {Terminal(final_parenthesis)}
Follow(<LOOP>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
Follow(<CALLER>) = {Terminal(op_logic_greater), Terminal(end_of_line), Terminal(initial_parenthesis), Terminal(op_logic_smaller), Terminal(op_logic_greater_equal), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(op_arit_sum), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(op_logic_equal), Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(op_arit_sub), Terminal(op_logic_smaller_equal), Terminal(reserved_func_read), Terminal(comma)}
Follow(<CONDITION_SEQUENCE>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
Follow(<DECLARED_LOOP>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
Follow(<ALTERNATIVE_CONDITIONS>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
Follow(<ARGUMENTS>) = {Terminal(final_parenthesis)}
Follow(<ID>) = {Terminal(op_logic_greater), Terminal(end_of_line), Terminal(op_logic_smaller), Terminal(initial_parenthesis), Terminal(op_logic_greater_equal), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(op_arit_sum), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(op_logic_equal), Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(op_arit_sub), Terminal(op_logic_smaller_equal), Terminal(reserved_func_read), Terminal(comma)}
Follow(<OP>) = {Terminal(char), Terminal(string), Terminal(initial_parenthesis), Terminal(reserved_func_read), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(number), Terminal(id), Terminal(reserved_func_input)}
Follow(<ALL_OPERATIONS>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
Follow(<OPERATION>) = {Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(end_of_line), Terminal(initial_parenthesis), Terminal(reserved_func_read), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(comma), Terminal(number), Terminal(id), Terminal(reserved_func_input)}
Follow(<OP'>) = {Terminal(final_parenthesis)}
Follow(<ALL_OPERATIONS'>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
Follow(<CALL>) = {Terminal(op_logic_greater), Terminal(end_of_line), Terminal(op_logic_smaller), Terminal(initial_parenthesis), Terminal(op_logic_greater_equal), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(op_arit_sum), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(op_logic_equal), Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(op_arit_sub), Terminal(op_logic_smaller_equal), Terminal(reserved_func_read), Terminal(comma)}
Follow(<ID'>) = {Terminal(op_logic_greater), Terminal(end_of_line), Terminal(op_logic_smaller), Terminal(initial_parenthesis), Terminal(op_logic_greater_equal), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(op_arit_sum), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(op_logic_equal), Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(op_arit_sub), Terminal(op_logic_smaller_equal), Terminal(reserved_func_read), Terminal(comma)}
Follow(<TERM>) = {Terminal(op_logic_smaller), Terminal(op_logic_smaller_equal), Terminal(op_logic_equal), Terminal(op_arit_sum), Terminal(op_logic_greater_equal), Terminal(op_arit_sub), Terminal(op_logic_greater)}
Follow(<FUNCTION_DECLARATION>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(comma), Terminal(reserved_type_number)}
Follow(<ATTRIBUTION_DECLARATION>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(comma), Terminal(reserved_type_number)}
Follow(<FUNCTION_CALL'>) = {Terminal(op_logic_greater), Terminal(end_of_line), Terminal(op_logic_smaller), Terminal(initial_parenthesis), Terminal(op_logic_greater_equal), Terminal(reserved_func_write), Terminal(reserved_func_print), Terminal(op_arit_sum), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(op_logic_equal), Terminal(final_parenthesis), Terminal(char), Terminal(string), Terminal(op_arit_sub), Terminal(op_logic_smaller_equal), Terminal(reserved_func_read), Terminal(comma)}
Follow(<SENTENCE_BODY>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
Follow(<ATTRIBUTION>) = {Terminal(final_parenthesis)}
Follow(<ALTERNATIVE_CONDITIONS'>) = {Terminal(reserved_type_void), Terminal(reserved_func_write), Terminal(reserved_directive_return), Terminal(reserved_type_string), Terminal(reserved_func_print), Terminal(final_block), Terminal(number), Terminal(id), Terminal(reserved_func_input), Terminal(reserved_directive_loop), Terminal(char), Terminal(string), Terminal(reserved_type_char), Terminal(reserved_directive_if), Terminal($), Terminal(initial_block), Terminal(reserved_func_read), Terminal(reserved_type_number)}
