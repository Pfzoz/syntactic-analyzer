Follow(<START>) = {Terminal($, None)}
Follow(<DECLARATION>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(comma, None), Terminal(reserved_directive_loop, None)}
Follow(<SENTENCE>) = {Terminal(final_block, None), Terminal($, None)}
Follow(<EXPRESSION>) = {Terminal(string, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(reserved_func_read, None), Terminal(id, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(comma, None), Terminal(end_of_line, None), Terminal(reserved_func_input, None), Terminal(initial_parenthesis, None)}
Follow(<BLOCK>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(comma, None), Terminal(reserved_directive_loop, None), Terminal(reserved_directive_else, None)}
Follow(<TYPE>) = {Terminal(id, None)}
Follow(<PARAMETERS>) = {Terminal(final_parenthesis, None)}
Follow(<PARAMETER>) = {Terminal(final_parenthesis, None), Terminal(comma, None)}
Follow(<FUNCTION_CALL>) = {Terminal(string, None), Terminal(op_logic_greater, None), Terminal(reserved_func_read, None), Terminal(op_logic_smaller, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(op_arit_sum, None), Terminal(op_arit_sub, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(op_logic_greater_equal, None), Terminal(initial_parenthesis, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(id, None), Terminal(comma, None), Terminal(op_logic_equal, None), Terminal(end_of_line, None), Terminal(op_logic_smaller_equal, None)}
Follow(<ADDITIONAL_PARAMETERS>) = {Terminal(final_parenthesis, None)}
Follow(<LOOP>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<CALLER>) = {Terminal(string, None), Terminal(op_logic_greater, None), Terminal(reserved_func_read, None), Terminal(op_logic_smaller, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(op_arit_sum, None), Terminal(op_arit_sub, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(initial_parenthesis, None), Terminal(op_logic_greater_equal, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(id, None), Terminal(comma, None), Terminal(op_logic_equal, None), Terminal(end_of_line, None), Terminal(op_logic_smaller_equal, None)}
Follow(<CONDITION_SEQUENCE>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<DECLARED_LOOP>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<ALTERNATIVE_CONDITIONS>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<ARGUMENTS>) = {Terminal(final_parenthesis, None)}
Follow(<ID>) = {Terminal(string, None), Terminal(op_logic_greater, None), Terminal(reserved_func_read, None), Terminal(op_logic_smaller, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(op_arit_sum, None), Terminal(op_arit_sub, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(op_logic_greater_equal, None), Terminal(initial_parenthesis, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(id, None), Terminal(comma, None), Terminal(op_logic_equal, None), Terminal(end_of_line, None), Terminal(op_logic_smaller_equal, None)}
Follow(<OP>) = {Terminal(string, None), Terminal(char, None), Terminal(reserved_func_input, None), Terminal(reserved_func_read, None), Terminal(id, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(initial_parenthesis, None)}
Follow(<ALL_OPERATIONS>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<OPERATION>) = {Terminal(string, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(reserved_func_read, None), Terminal(id, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(comma, None), Terminal(end_of_line, None), Terminal(reserved_func_input, None), Terminal(initial_parenthesis, None)}
Follow(<OP'>) = {Terminal(final_parenthesis, None)}
Follow(<ALL_OPERATIONS'>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<CALL>) = {Terminal(string, None), Terminal(op_logic_greater, None), Terminal(reserved_func_read, None), Terminal(op_logic_smaller, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(op_arit_sum, None), Terminal(op_arit_sub, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(op_logic_greater_equal, None), Terminal(initial_parenthesis, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(id, None), Terminal(comma, None), Terminal(op_logic_equal, None), Terminal(end_of_line, None), Terminal(op_logic_smaller_equal, None)}
Follow(<ID'>) = {Terminal(string, None), Terminal(op_logic_greater, None), Terminal(reserved_func_read, None), Terminal(op_logic_smaller, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(op_arit_sum, None), Terminal(op_arit_sub, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(op_logic_greater_equal, None), Terminal(initial_parenthesis, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(id, None), Terminal(comma, None), Terminal(op_logic_equal, None), Terminal(end_of_line, None), Terminal(op_logic_smaller_equal, None)}
Follow(<TERM>) = {Terminal(op_logic_equal, None), Terminal(op_logic_greater, None), Terminal(op_arit_sum, None), Terminal(op_arit_sub, None), Terminal(op_logic_smaller_equal, None), Terminal(op_logic_smaller, None), Terminal(op_logic_greater_equal, None)}
Follow(<FUNCTION_DECLARATION>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(comma, None), Terminal(reserved_directive_loop, None)}
Follow(<ATTRIBUTION_DECLARATION>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(comma, None), Terminal(reserved_directive_loop, None)}
Follow(<FUNCTION_CALL'>) = {Terminal(string, None), Terminal(op_logic_greater, None), Terminal(reserved_func_read, None), Terminal(op_logic_smaller, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(op_arit_sum, None), Terminal(op_arit_sub, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(op_logic_greater_equal, None), Terminal(initial_parenthesis, None), Terminal(final_parenthesis, None), Terminal(char, None), Terminal(id, None), Terminal(comma, None), Terminal(op_logic_equal, None), Terminal(end_of_line, None), Terminal(op_logic_smaller_equal, None)}
Follow(<SENTENCE_BODY>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<ATTRIBUTION>) = {Terminal(final_parenthesis, None)}
Follow(<LOOP'>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
Follow(<ALTERNATIVE_CONDITIONS'>) = {Terminal(string, None), Terminal(reserved_type_string, None), Terminal(reserved_func_read, None), Terminal(reserved_directive_if, None), Terminal(reserved_type_char, None), Terminal(reserved_func_print, None), Terminal(reserved_func_write, None), Terminal(number, None), Terminal(reserved_func_input, None), Terminal(reserved_directive_return, None), Terminal(final_block, None), Terminal($, None), Terminal(char, None), Terminal(reserved_type_number, None), Terminal(initial_block, None), Terminal(id, None), Terminal(reserved_type_void, None), Terminal(reserved_directive_loop, None)}
